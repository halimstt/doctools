import{d as J,h as P,s as g,g as Q,a as V,p as N}from"./utils-BjNhfFR4.js";const B=document.getElementById("parser-select"),T=document.getElementById("upload-area"),O=document.getElementById("file-input"),w=document.getElementById("upload-label"),k=document.getElementById("file-info"),Y=document.getElementById("file-pills-container"),X=document.getElementById("remove-all-files-btn"),b=document.getElementById("process-btn"),j=document.getElementById("download-btn"),y=document.getElementById("status-text"),M=document.getElementById("process-btn-text"),$=document.getElementById("spinner");document.getElementById("results-container");const C=document.getElementById("results-table-body");let u=[],A=[];function v(){u=[],A=[],O.value="",k.classList.add("hidden"),w.classList.remove("hidden"),b.disabled=!0,y.textContent="",P(),F(),M.textContent="Process",$.classList.add("hidden"),W([]),R()}function F(){Y.innerHTML="",u.length===0?(k.classList.add("hidden"),w.classList.remove("hidden")):(u.forEach((a,r)=>{const t=document.createElement("span");t.className="badge badge-md badge-info mr-2 mb-2",t.innerHTML=`
        ${a.name}
        <button type="button" class="ml-2" data-index="${r}">
          <svg class="h-3 w-3" stroke="currentColor" fill="none" viewBox="0 0 8 8">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7" />
          </svg>
        </button>
      `,t.querySelector("button").addEventListener("click",i=>{const o=parseInt(i.currentTarget.dataset.index);Z(o)}),Y.appendChild(t)}),k.classList.remove("hidden"),w.classList.add("hidden")),b.disabled=u.length===0}function W(a){if(C.innerHTML="",!a||a.length===0){const r=document.createElement("tr");r.innerHTML=`
      <td colspan="3" class="text-center">
        No documents processed yet.
      </td>
    `,C.appendChild(r);return}try{a.forEach(r=>{const t=document.createElement("tr"),i=document.createElement("td");i.textContent=r.Date||"",t.appendChild(i);const o=document.createElement("td");o.textContent=r.Description||"",t.appendChild(o);const s=document.createElement("td"),c=r.Amount||"";if(s.textContent=c,typeof c=="string"&&c.trim()!==""){const n=parseFloat(c);s.classList.add("text-right","font-mono"),s.classList.toggle("text-success",n>0),s.classList.toggle("text-error",n<0)}t.appendChild(s),C.appendChild(t)})}catch{g("error","Could not display results due to an internal error. Check the console.")}}function R(){const a=C.children.length>0&&C.children[0].textContent.trim()!=="No documents processed yet.";j.disabled=!a}function G(a){const r=B.value,t=Array.from(a).filter(i=>i.type==="application/pdf");if(t.length===0){g("error","Please select valid PDF file(s)."),u.length===0&&(b.disabled=!0);return}r==="maybank-pdf"?(t.length>1&&g("error","Maybank PDF Statement parser supports only one PDF file at a time. Only the first file will be used."),u=[t[0]]):t.forEach(i=>{u.some(o=>o.name===i.name&&o.size===i.size)||u.push(i)}),F(),b.disabled=u.length===0,P()}function Z(a){u.splice(a,1),F(),u.length===0&&P()}async function _(){if(u.length===0){g("error","Please select at least one PDF file first.");return}b.disabled=!0,$.classList.remove("hidden"),M.textContent="Processing...",y.textContent="",P(),A=[];const a=B.value;let r=Q();if(a==="gemini-parser"&&!r)try{const t=await V();if(!t){g("error","Gemini API key is required for this parser. Processing canceled."),v();return}r=t}catch{g("error","Could not get Gemini API key. Processing canceled."),v();return}try{for(let t=0;t<u.length;t++){const i=u[t];y.textContent=`Processing ${i.name} (${t+1}/${u.length})...`;const o=new FileReader,s=new Promise((d,p)=>{o.onload=f=>d(f.target.result),o.onerror=p,o.readAsArrayBuffer(i)}),c=new Uint8Array(await s),n=await pdfjsLib.getDocument(c).promise;let e=[];switch(a){case"maybank-pdf":if(u.length>1&&t>0)continue;y.textContent=`Analyzing content in ${i.name} (Maybank PDF mode)...`;const d=await ee(n);e=te(d);break;case"maybank-web":y.textContent=`Analyzing content in ${i.name} (Maybank Web mode)...`;const p=await ne(n);e=se(p);break;case"gemini-parser":y.textContent=`Sending pages of ${i.name} to AI for processing...`,e=await ae(n,r);break;default:throw g("error","Invalid parser selected. Please choose a valid statement type."),new Error("Invalid parser selected.")}A=A.concat(e)}A.sort((t,i)=>{const o=N(t.Date),s=N(i.Date);return o-s}),y.textContent="",W(A),R(),A.length>0?g("success",`${u.length} PDF(s) processed and converted file ready for download!`):g("error","No valid transactions were extracted from the selected PDF(s). Please check your file(s) and selected parser type.")}catch(t){g("error",`An error occurred during PDF conversion: ${t.message}. Please check the console for details and ensure your Gemini API is enabled for this project if using the AI parser.`)}finally{b.disabled=!1,$.classList.add("hidden"),M.textContent="Process",y.textContent="Processing your statements..."}}async function ee(a){const r=[];for(let t=1;t<=a.numPages;t++){const o=await(await a.getPage(t)).getTextContent(),s={};for(const n of o.items){const e=Math.round(n.transform[5]);s[e]||(s[e]=[]),s[e].push(n)}const c=Object.keys(s).sort((n,e)=>e-n);for(const n of c)s[n].sort((e,d)=>e.transform[4]-d.transform[4]),r.push(s[n].map(e=>e.str).join(" "))}return r}function te(a){const r=a.join(" ").match(/STATEMENT DATE\s*:\s*(\d{2}\/\d{2}\/\d{2})/i),t=r?`20${r[1].slice(-2)}`:new Date().getFullYear().toString(),i=[];let o=!1;for(const e of a){if(/ACCOUNT\s*TRANSACTIONS/i.test(e)){o=!0;continue}if(/BAKI\s*LEGAR/i.test(e)){o=!1;continue}if(o){if(/TARIKH\s*MASUK/i.test(e)&&/TARIKH\s*NILAI/i.test(e)||/進支日期/i.test(e)&&/仄過賬日期/.test(e)||/ENTRY\s*DATE/i.test(e)&&/VALUE\s*DATE/i.test(e)||/BEGINNING\s*BALANCE/i.test(e)||e.trim()==="=")continue;i.push(e)}}const s=[];let c=[];for(const e of[...i].reverse()){if(/TIADA\s*URUSNIAGA/i.test(e)||/NO\s*TRANSACTION/i.test(e)||/TOTAL\s*DEBIT/i.test(e)||/ENDING\s*BALANCE/i.test(e)||/LEDGER\s*BALANCE/i.test(e)){c=[];continue}const p=e.match(/^\s*(\d{2}\/\d{2})\s+(.*?)\s+([\d,]*\.\d{1,2}[+-])(?:\s+[\d,]*\.\d{2})?$/);if(p){let f=p[1],l=p[2];const m=p[3],h=m.replace(/,/g,"").replace(/[+-]$/,""),L=m.slice(-1);let I=parseFloat(h);if(L==="-"&&(I=-I),f===void 0&&c.length>0){const D=c.findIndex(x=>/^\d{2}\/\d{2}/.test(x.trim()));if(D>-1){const x=c.splice(D,1)[0];f=x.trim().substring(0,5),l=x.trim().substring(5).trim()+" "+l}}c.length>0&&(l=l.trim()+" "+c.reverse().join(" ")),f&&s.push({Date:`${f}/${t}`,Description:l,Amount:I}),c=[]}else e.trim().length>1&&c.push(e.trim())}return s.reverse().map(e=>{const d=String(e.Description).replace(/TRANSFER FR A\/C/gi,"").replace(/TRANSFER TO A\/C/gi,"").replace(/PAYMENT FR A\/C/gi,"").replace(/MBB CT-?/gi,"").replace(/\s+/g," ").trim();return{Date:e.Date,Description:d,Amount:parseFloat(e.Amount).toFixed(2)}})}async function ne(a){let r="";for(let t=1;t<=a.numPages;t++){const o=await(await a.getPage(t)).getTextContent();let s=-1,c="";o.items.sort((n,e)=>n.transform[5]<e.transform[5]?1:n.transform[5]>e.transform[5]||n.transform[4]<e.transform[4]?-1:n.transform[4]>e.transform[4]?1:0);for(const n of o.items)s!==-1&&Math.abs(n.transform[5]-s)>5&&(r+=c.trim()+`
`,c=""),c+=n.str+" ",s=n.transform[5];r+=c.trim()+`
`}return r}function se(a){const r=[],t=/^\d{1,2}\s+\w{3}\s+\d{4}/,i=/(-?)\s*RM\s*([\d,]+\.\d{2})\s*$/,o=a.split(`
`);let s=null;for(const c of o){const n=c.trim();if(!n||n.toLowerCase().startsWith("date")||n.toLowerCase().startsWith("description")||n.toLowerCase().startsWith("amount"))continue;if(t.test(n)){s&&r.push(s);let d=n.match(t)[0],p=n.replace(t,"").trim(),f=p.match(i),l=p,m=null;f&&(m=(f[1]||"")+f[2].replace(/,/g,""),l=l.replace(f[0],"").trim()),s={date:d,description:l,amount:m}}else if(s&&!s.amount){let d=n.match(i),p=n;d&&(s.amount=(d[1]||"")+d[2].replace(/,/g,""),p=p.replace(d[0],"").trim()),s.description+=" "+p}else if(s&&s.amount){const d=r[r.length-1];d?d.Description+=" "+n:s&&(r.push(s),s=null)}}return s&&r.push(s),r.map(c=>{const n=new Date(c.date),e=String(n.getDate()).padStart(2,"0"),d=String(n.getMonth()+1).padStart(2,"0"),p=n.getFullYear(),f=`${e}/${d}/${p}`,l=String(c.description).replace(/\s+/g," ").trim(),m=l.startsWith('"')&&l.endsWith('"')?l.substring(1,l.length-1):l;return{Date:f,Description:m,Amount:parseFloat(c.amount).toFixed(2)}})}async function ae(a,r){const t=[],i=a.numPages;if(!r)throw new Error("Gemini API key is missing. Please provide it.");for(let o=1;o<=i;o++){y.textContent=`Sending page ${o}/${i} to AI for processing...`;const n=(await(await a.getPage(o)).getTextContent()).items.map(l=>l.str).join(" ");let e=[];const d=`You are an expert at extracting financial transactions from bank statements.
      Extract all transactions from the following page text.
      For each transaction, identify the 'Date', 'Description', and 'Amount'.

      Rules for extraction:
      - The Date should be in DD/MM/YYYY format. If only DD/MM is present, assume the current year for a full DD/MM/YYYY format.
      - The Description should be a concise summary of the transaction.
      - The Amount should be a numeric value. It should be positive for incoming funds (credit) and negative for outgoing funds (debit/expense). Do not include currency symbols (like RM).
      - Pay close attention to keywords and common transaction patterns to correctly identify whether an amount is a debit or a credit. For example, 'DUITNOW QR' or direct deposits are typically positive, while 'QR PAY SALES', 'MBB CT', or mentions of purchases/payments are typically negative. If the original text explicitly shows a minus sign or indicates a debit, ensure the output amount is negative.
      - Ignore any opening/closing balances, totals, page numbers, headers, footers, or non-transactional text.
      - If multiple transactions are found, return them as an array of objects.
      - If no transactions are found on this page, return an empty array.

      Here is the bank statement page text:
      """
      ${n}
      """
      `;e.push({role:"user",parts:[{text:d}]});const p={contents:e,generationConfig:{responseMimeType:"application/json",responseSchema:{type:"ARRAY",items:{type:"OBJECT",properties:{Date:{type:"STRING",description:"Transaction date in DD/MM/YYYY format."},Description:{type:"STRING",description:"Concise description of the transaction."},Amount:{type:"NUMBER",description:"Numeric amount, positive for credit, negative for debit."}},required:["Date","Description","Amount"]}}}},f=`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${r}`;try{const l=await fetch(f,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});if(!l.ok){const h=await l.text();throw new Error(`API request failed for page ${o}: ${l.status} ${l.statusText}. Details: ${h}`)}const m=await l.json();if(m.candidates&&m.candidates.length>0&&m.candidates[0].content&&m.candidates[0].content.parts&&m.candidates[0].content.parts.length>0){const h=m.candidates[0].content.parts[0].text;let L;try{L=JSON.parse(h)}catch{continue}const I=L.map(D=>{let[x,U,E]=D.Date.split("/");if(!E||E.length!==4){const q=new Date().getFullYear(),z=String(q).slice(-2),S=parseInt(E,10);E=S<=parseInt(z,10)?`20${String(S).padStart(2,"0")}`:`19${String(S).padStart(2,"0")}`}const H=String(E),K=String(D.Description).replace(/\s+/g," ").trim();return{Date:`${String(x).padStart(2,"0")}/${String(U).padStart(2,"0")}/${H}`,Description:K,Amount:parseFloat(D.Amount).toFixed(2)}});t.push(...I)}else{let h=`No valid content found for page ${o} in Gemini API response.`;m.promptFeedback&&m.promptFeedback.blockReason&&(h+=` Block reason: ${m.promptFeedback.blockReason}.`,m.promptFeedback.safetyRatings&&(h+=` Safety ratings: ${JSON.stringify(m.promptFeedback.safetyRatings)}.`)),g("error",`AI processing warning for page ${o}: ${h}`)}}catch(l){g("error",`AI processing failed for page ${o}: ${l.message}.`)}}return t}document.addEventListener("DOMContentLoaded",()=>{v(),R(),B.addEventListener("change",v),O.addEventListener("change",a=>{G(a.target.files)}),X.addEventListener("click",v),T.addEventListener("dragover",a=>{a.preventDefault(),T.classList.add("upload-area-highlight")}),T.addEventListener("dragleave",()=>{T.classList.remove("upload-area-highlight")}),T.addEventListener("drop",a=>{a.preventDefault(),T.classList.remove("upload-area-highlight"),G(a.dataTransfer.files)}),b.addEventListener("click",_),j.addEventListener("click",()=>{J(A,["Date","Description","Amount"],"transactions.csv")})});
